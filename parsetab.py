
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOU_LOGICOleftE_LOGICOrightNEGACAOleftIGUALDADEDIFERENTEMAIORMENORMAIOR_IGUALMENOR_IGUALleftMAISMENOSleftMULTDIVRESTOrightUMINUSABRE_CHAVE ABRE_PAREN DIFERENTE DIV ENQUANTO E_LOGICO FECHA_CHAVE FECHA_PAREN FIM FUNCAO ID IGUAL IGUALDADE INTEIRO LITERAL_TEXTO MAIOR MAIOR_IGUAL MAIS MENOR MENOR_IGUAL MENOS MULT NEGACAO NUMERO OU_LOGICO PONTO_VIRGULA PROCEDIMENTO REAL RESTO RETORNO SE SENAO TIPO_TEXTO VAZIO VIRGULAprograma : declaracoes_globais comandos FIMdeclaracoes_globais : declaracoes_globais declaracao_global\n| emptydeclaracao_global : declaracao_variavel\n| declaracao_funcao\n| declaracao_procedimentodeclaracao_variavel : tipo ID PONTO_VIRGULAtipo : INTEIRO\n| REAL\n| TIPO_TEXTOcomandos : comandos comando\n| emptycomando : atribuicao\n| condicional\n| comando_repeticao\n| chamada_procedimento_stmt\n| comando_retorno\n| bloco_comandos\nbloco_comandos : ABRE_CHAVE comandos FECHA_CHAVEcomando_repeticao : ENQUANTO ABRE_PAREN expressao FECHA_PAREN bloco_comandosatribuicao : ID IGUAL expressao PONTO_VIRGULAcondicional : SE ABRE_PAREN expressao FECHA_PAREN bloco_comandos\n| SE ABRE_PAREN expressao FECHA_PAREN bloco_comandos SENAO bloco_comandosexpressao : expressao MAIS expressao\n| expressao MENOS expressao\n| expressao MULT expressao\n| expressao DIV expressao\n| expressao RESTO expressao\n| expressao MAIOR expressao\n| expressao MENOR expressao\n| expressao MAIOR_IGUAL expressao\n| expressao MENOR_IGUAL expressao\n| expressao IGUALDADE expressao\n| expressao DIFERENTE expressaoexpressao : expressao E_LOGICO expressao\n| expressao OU_LOGICO expressaoexpressao : NEGACAO expressao %prec UMINUSexpressao : fatorfator : NUMEROfator : LITERAL_TEXTOfator : IDfator : ID ABRE_PAREN lista_argumentos FECHA_PARENchamada_procedimento_stmt : ID ABRE_PAREN lista_argumentos FECHA_PAREN PONTO_VIRGULAlista_argumentos : argumentos\n| emptyargumentos : expressao\n| argumentos VIRGULA expressaofator : ABRE_PAREN expressao FECHA_PARENdeclaracao_funcao : func_sig marker_enter_scope ABRE_CHAVE comandos_funcao FECHA_CHAVE marker_exit_scopefunc_sig : FUNCAO ID ABRE_PAREN lista_parametros FECHA_PAREN RETORNO tipomarker_enter_scope : emptymarker_exit_scope : emptydeclaracao_procedimento : proc_sig marker_enter_scope ABRE_CHAVE comandos_funcao FECHA_CHAVE marker_exit_scopeproc_sig : PROCEDIMENTO ID ABRE_PAREN lista_parametros FECHA_PARENcomandos_funcao : comandos_funcao comando_local\n| emptycomando_local : declaracao_variavel\n| comandolista_parametros : parametros\n| emptyparametros : parametro\n| parametros VIRGULA parametroparametro : tipo IDcomando_retorno : RETORNO expressao PONTO_VIRGULA\n| RETORNO PONTO_VIRGULAempty :'
    
_lr_action_items = {'INTEIRO':([0,2,3,5,7,8,9,20,21,22,23,24,25,42,50,51,52,53,54,62,79,80,81,82,89,109,110,111,112,113,116,118,120,121,123,124,125,126,130,],[-66,13,-3,-2,-4,-5,-6,-13,-14,-15,-16,-17,-18,-65,-7,-66,-66,13,13,-64,-19,13,-56,13,-21,-66,-55,-57,-58,-66,13,-43,-22,-20,-49,-52,-53,13,-23,]),'REAL':([0,2,3,5,7,8,9,20,21,22,23,24,25,42,50,51,52,53,54,62,79,80,81,82,89,109,110,111,112,113,116,118,120,121,123,124,125,126,130,],[-66,14,-3,-2,-4,-5,-6,-13,-14,-15,-16,-17,-18,-65,-7,-66,-66,14,14,-64,-19,14,-56,14,-21,-66,-55,-57,-58,-66,14,-43,-22,-20,-49,-52,-53,14,-23,]),'TIPO_TEXTO':([0,2,3,5,7,8,9,20,21,22,23,24,25,42,50,51,52,53,54,62,79,80,81,82,89,109,110,111,112,113,116,118,120,121,123,124,125,126,130,],[-66,15,-3,-2,-4,-5,-6,-13,-14,-15,-16,-17,-18,-65,-7,-66,-66,15,15,-64,-19,15,-56,15,-21,-66,-55,-57,-58,-66,15,-43,-22,-20,-49,-52,-53,15,-23,]),'FUNCAO':([0,2,3,5,7,8,9,50,109,113,123,124,125,],[-66,16,-3,-2,-4,-5,-6,-7,-66,-66,-49,-52,-53,]),'PROCEDIMENTO':([0,2,3,5,7,8,9,50,109,113,123,124,125,],[-66,17,-3,-2,-4,-5,-6,-7,-66,-66,-49,-52,-53,]),'FIM':([0,2,3,4,5,6,7,8,9,19,20,21,22,23,24,25,42,50,62,79,89,109,113,118,120,121,123,124,125,130,],[-66,-66,-3,18,-2,-12,-4,-5,-6,-11,-13,-14,-15,-16,-17,-18,-65,-7,-64,-19,-21,-66,-66,-43,-22,-20,-49,-52,-53,-23,]),'ID':([0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,23,24,25,29,30,37,38,39,40,42,43,48,49,50,51,52,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,84,89,91,109,110,111,112,113,118,120,121,123,124,125,130,],[-66,-66,-3,26,-2,-12,-4,-5,-6,31,-8,-9,-10,35,36,-11,-13,-14,-15,-16,-17,-18,47,-66,47,47,47,47,-65,47,47,26,-7,-66,-66,-64,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-19,26,-56,26,115,-21,47,-66,-55,-57,-58,-66,-43,-22,-20,-49,-52,-53,-23,]),'SE':([0,2,3,4,5,6,7,8,9,19,20,21,22,23,24,25,30,42,49,50,51,52,62,79,80,81,82,89,109,110,111,112,113,118,120,121,123,124,125,130,],[-66,-66,-3,27,-2,-12,-4,-5,-6,-11,-13,-14,-15,-16,-17,-18,-66,-65,27,-7,-66,-66,-64,-19,27,-56,27,-21,-66,-55,-57,-58,-66,-43,-22,-20,-49,-52,-53,-23,]),'ENQUANTO':([0,2,3,4,5,6,7,8,9,19,20,21,22,23,24,25,30,42,49,50,51,52,62,79,80,81,82,89,109,110,111,112,113,118,120,121,123,124,125,130,],[-66,-66,-3,28,-2,-12,-4,-5,-6,-11,-13,-14,-15,-16,-17,-18,-66,-65,28,-7,-66,-66,-64,-19,28,-56,28,-21,-66,-55,-57,-58,-66,-43,-22,-20,-49,-52,-53,-23,]),'RETORNO':([0,2,3,4,5,6,7,8,9,19,20,21,22,23,24,25,30,42,49,50,51,52,62,79,80,81,82,89,109,110,111,112,113,114,118,120,121,123,124,125,130,],[-66,-66,-3,29,-2,-12,-4,-5,-6,-11,-13,-14,-15,-16,-17,-18,-66,-65,29,-7,-66,-66,-64,-19,29,-56,29,-21,-66,-55,-57,-58,-66,126,-43,-22,-20,-49,-52,-53,-23,]),'ABRE_CHAVE':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,19,20,21,22,23,24,25,30,32,33,34,42,49,50,51,52,62,79,80,81,82,89,92,93,109,110,111,112,113,117,118,120,121,123,124,125,128,129,130,],[-66,-66,-3,30,-2,-12,-4,-5,-6,-66,-66,-8,-9,-10,-11,-13,-14,-15,-16,-17,-18,-66,51,-51,52,-65,30,-7,-66,-66,-64,-19,30,-56,30,-21,30,30,-66,-55,-57,-58,-66,-54,-43,-22,-20,-49,-52,-53,30,-50,-23,]),'$end':([1,18,],[0,-1,]),'FECHA_CHAVE':([6,19,20,21,22,23,24,25,30,42,49,50,51,52,62,79,80,81,82,89,110,111,112,118,120,121,130,],[-12,-11,-13,-14,-15,-16,-17,-18,-66,-65,79,-7,-66,-66,-64,-19,109,-56,113,-21,-55,-57,-58,-43,-22,-20,-23,]),'IGUAL':([26,],[37,]),'ABRE_PAREN':([26,27,28,29,35,36,37,38,39,40,43,47,48,63,64,65,66,67,68,69,70,71,72,73,74,75,77,91,],[38,39,40,48,53,54,48,48,48,48,48,77,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'PONTO_VIRGULA':([29,31,41,44,45,46,47,55,76,90,94,95,96,97,98,99,100,101,102,103,104,105,106,108,122,],[42,50,62,-38,-39,-40,-41,89,-37,118,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-48,-42,]),'NEGACAO':([29,37,38,39,40,43,48,63,64,65,66,67,68,69,70,71,72,73,74,75,77,91,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'NUMERO':([29,37,38,39,40,43,48,63,64,65,66,67,68,69,70,71,72,73,74,75,77,91,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'LITERAL_TEXTO':([29,37,38,39,40,43,48,63,64,65,66,67,68,69,70,71,72,73,74,75,77,91,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'FECHA_PAREN':([38,44,45,46,47,53,54,56,57,58,59,60,61,76,77,78,83,85,86,87,88,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,119,122,127,],[-66,-38,-39,-40,-41,-66,-66,90,-44,-45,-46,92,93,-37,-66,108,114,-59,-60,-61,117,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,122,-48,-63,-47,-42,-62,]),'MAIS':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[63,-38,-39,-40,-41,63,63,63,63,-37,63,-24,-25,-26,-27,-28,63,63,63,63,63,63,63,63,-48,63,-42,]),'MENOS':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[64,-38,-39,-40,-41,64,64,64,64,-37,64,-24,-25,-26,-27,-28,64,64,64,64,64,64,64,64,-48,64,-42,]),'MULT':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[65,-38,-39,-40,-41,65,65,65,65,-37,65,65,65,-26,-27,-28,65,65,65,65,65,65,65,65,-48,65,-42,]),'DIV':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[66,-38,-39,-40,-41,66,66,66,66,-37,66,66,66,-26,-27,-28,66,66,66,66,66,66,66,66,-48,66,-42,]),'RESTO':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[67,-38,-39,-40,-41,67,67,67,67,-37,67,67,67,-26,-27,-28,67,67,67,67,67,67,67,67,-48,67,-42,]),'MAIOR':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[68,-38,-39,-40,-41,68,68,68,68,-37,68,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,68,68,-48,68,-42,]),'MENOR':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[69,-38,-39,-40,-41,69,69,69,69,-37,69,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,69,69,-48,69,-42,]),'MAIOR_IGUAL':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[70,-38,-39,-40,-41,70,70,70,70,-37,70,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,70,70,-48,70,-42,]),'MENOR_IGUAL':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[71,-38,-39,-40,-41,71,71,71,71,-37,71,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,71,71,-48,71,-42,]),'IGUALDADE':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[72,-38,-39,-40,-41,72,72,72,72,-37,72,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,72,72,-48,72,-42,]),'DIFERENTE':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[73,-38,-39,-40,-41,73,73,73,73,-37,73,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,73,73,-48,73,-42,]),'E_LOGICO':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[74,-38,-39,-40,-41,74,74,74,74,-37,74,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,74,-48,74,-42,]),'OU_LOGICO':([41,44,45,46,47,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,108,119,122,],[75,-38,-39,-40,-41,75,75,75,75,-37,75,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-48,75,-42,]),'VIRGULA':([44,45,46,47,57,59,76,85,87,94,95,96,97,98,99,100,101,102,103,104,105,106,108,115,119,122,127,],[-38,-39,-40,-41,91,-46,-37,116,-61,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-48,-63,-47,-42,-62,]),'SENAO':([79,120,],[-19,128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracoes_globais':([0,],[2,]),'empty':([0,2,11,12,30,38,51,52,53,54,77,109,113,],[3,6,33,33,6,58,81,81,86,86,58,124,124,]),'comandos':([2,30,],[4,49,]),'declaracao_global':([2,],[5,]),'declaracao_variavel':([2,80,82,],[7,111,111,]),'declaracao_funcao':([2,],[8,]),'declaracao_procedimento':([2,],[9,]),'tipo':([2,53,54,80,82,116,126,],[10,84,84,10,10,84,129,]),'func_sig':([2,],[11,]),'proc_sig':([2,],[12,]),'comando':([4,49,80,82,],[19,19,112,112,]),'atribuicao':([4,49,80,82,],[20,20,20,20,]),'condicional':([4,49,80,82,],[21,21,21,21,]),'comando_repeticao':([4,49,80,82,],[22,22,22,22,]),'chamada_procedimento_stmt':([4,49,80,82,],[23,23,23,23,]),'comando_retorno':([4,49,80,82,],[24,24,24,24,]),'bloco_comandos':([4,49,80,82,92,93,128,],[25,25,25,25,120,121,130,]),'marker_enter_scope':([11,12,],[32,34,]),'expressao':([29,37,38,39,40,43,48,63,64,65,66,67,68,69,70,71,72,73,74,75,77,91,],[41,55,59,60,61,76,78,94,95,96,97,98,99,100,101,102,103,104,105,106,59,119,]),'fator':([29,37,38,39,40,43,48,63,64,65,66,67,68,69,70,71,72,73,74,75,77,91,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'lista_argumentos':([38,77,],[56,107,]),'argumentos':([38,77,],[57,57,]),'comandos_funcao':([51,52,],[80,82,]),'lista_parametros':([53,54,],[83,88,]),'parametros':([53,54,],[85,85,]),'parametro':([53,54,116,],[87,87,127,]),'comando_local':([80,82,],[110,110,]),'marker_exit_scope':([109,113,],[123,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracoes_globais comandos FIM','programa',3,'p_programa','parser_baianivis.py',72),
  ('declaracoes_globais -> declaracoes_globais declaracao_global','declaracoes_globais',2,'p_declaracoes_globais','parser_baianivis.py',91),
  ('declaracoes_globais -> empty','declaracoes_globais',1,'p_declaracoes_globais','parser_baianivis.py',92),
  ('declaracao_global -> declaracao_variavel','declaracao_global',1,'p_declaracao_global','parser_baianivis.py',99),
  ('declaracao_global -> declaracao_funcao','declaracao_global',1,'p_declaracao_global','parser_baianivis.py',100),
  ('declaracao_global -> declaracao_procedimento','declaracao_global',1,'p_declaracao_global','parser_baianivis.py',101),
  ('declaracao_variavel -> tipo ID PONTO_VIRGULA','declaracao_variavel',3,'p_declaracao_variavel','parser_baianivis.py',105),
  ('tipo -> INTEIRO','tipo',1,'p_tipo','parser_baianivis.py',123),
  ('tipo -> REAL','tipo',1,'p_tipo','parser_baianivis.py',124),
  ('tipo -> TIPO_TEXTO','tipo',1,'p_tipo','parser_baianivis.py',125),
  ('comandos -> comandos comando','comandos',2,'p_comandos','parser_baianivis.py',130),
  ('comandos -> empty','comandos',1,'p_comandos','parser_baianivis.py',131),
  ('comando -> atribuicao','comando',1,'p_comando','parser_baianivis.py',138),
  ('comando -> condicional','comando',1,'p_comando','parser_baianivis.py',139),
  ('comando -> comando_repeticao','comando',1,'p_comando','parser_baianivis.py',140),
  ('comando -> chamada_procedimento_stmt','comando',1,'p_comando','parser_baianivis.py',141),
  ('comando -> comando_retorno','comando',1,'p_comando','parser_baianivis.py',142),
  ('comando -> bloco_comandos','comando',1,'p_comando','parser_baianivis.py',143),
  ('bloco_comandos -> ABRE_CHAVE comandos FECHA_CHAVE','bloco_comandos',3,'p_bloco_comandos','parser_baianivis.py',148),
  ('comando_repeticao -> ENQUANTO ABRE_PAREN expressao FECHA_PAREN bloco_comandos','comando_repeticao',5,'p_comando_repeticao','parser_baianivis.py',152),
  ('atribuicao -> ID IGUAL expressao PONTO_VIRGULA','atribuicao',4,'p_atribuicao','parser_baianivis.py',169),
  ('condicional -> SE ABRE_PAREN expressao FECHA_PAREN bloco_comandos','condicional',5,'p_condicional','parser_baianivis.py',200),
  ('condicional -> SE ABRE_PAREN expressao FECHA_PAREN bloco_comandos SENAO bloco_comandos','condicional',7,'p_condicional','parser_baianivis.py',201),
  ('expressao -> expressao MAIS expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',218),
  ('expressao -> expressao MENOS expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',219),
  ('expressao -> expressao MULT expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',220),
  ('expressao -> expressao DIV expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',221),
  ('expressao -> expressao RESTO expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',222),
  ('expressao -> expressao MAIOR expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',223),
  ('expressao -> expressao MENOR expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',224),
  ('expressao -> expressao MAIOR_IGUAL expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',225),
  ('expressao -> expressao MENOR_IGUAL expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',226),
  ('expressao -> expressao IGUALDADE expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',227),
  ('expressao -> expressao DIFERENTE expressao','expressao',3,'p_expressao_binaria','parser_baianivis.py',228),
  ('expressao -> expressao E_LOGICO expressao','expressao',3,'p_expressao_logica','parser_baianivis.py',276),
  ('expressao -> expressao OU_LOGICO expressao','expressao',3,'p_expressao_logica','parser_baianivis.py',277),
  ('expressao -> NEGACAO expressao','expressao',2,'p_expressao_negacao','parser_baianivis.py',298),
  ('expressao -> fator','expressao',1,'p_expressao_fator','parser_baianivis.py',310),
  ('fator -> NUMERO','fator',1,'p_fator_numero','parser_baianivis.py',315),
  ('fator -> LITERAL_TEXTO','fator',1,'p_fator_texto','parser_baianivis.py',324),
  ('fator -> ID','fator',1,'p_fator_id','parser_baianivis.py',332),
  ('fator -> ID ABRE_PAREN lista_argumentos FECHA_PAREN','fator',4,'p_fator_chamada_funcao','parser_baianivis.py',349),
  ('chamada_procedimento_stmt -> ID ABRE_PAREN lista_argumentos FECHA_PAREN PONTO_VIRGULA','chamada_procedimento_stmt',5,'p_chamada_procedimento_stmt','parser_baianivis.py',384),
  ('lista_argumentos -> argumentos','lista_argumentos',1,'p_lista_argumentos','parser_baianivis.py',416),
  ('lista_argumentos -> empty','lista_argumentos',1,'p_lista_argumentos','parser_baianivis.py',417),
  ('argumentos -> expressao','argumentos',1,'p_argumentos','parser_baianivis.py',421),
  ('argumentos -> argumentos VIRGULA expressao','argumentos',3,'p_argumentos','parser_baianivis.py',422),
  ('fator -> ABRE_PAREN expressao FECHA_PAREN','fator',3,'p_fator_parenteses','parser_baianivis.py',431),
  ('declaracao_funcao -> func_sig marker_enter_scope ABRE_CHAVE comandos_funcao FECHA_CHAVE marker_exit_scope','declaracao_funcao',6,'p_declaracao_funcao','parser_baianivis.py',437),
  ('func_sig -> FUNCAO ID ABRE_PAREN lista_parametros FECHA_PAREN RETORNO tipo','func_sig',7,'p_func_sig','parser_baianivis.py',454),
  ('marker_enter_scope -> empty','marker_enter_scope',1,'p_marker_enter_scope','parser_baianivis.py',469),
  ('marker_exit_scope -> empty','marker_exit_scope',1,'p_marker_exit_scope','parser_baianivis.py',490),
  ('declaracao_procedimento -> proc_sig marker_enter_scope ABRE_CHAVE comandos_funcao FECHA_CHAVE marker_exit_scope','declaracao_procedimento',6,'p_declaracao_procedimento','parser_baianivis.py',496),
  ('proc_sig -> PROCEDIMENTO ID ABRE_PAREN lista_parametros FECHA_PAREN','proc_sig',5,'p_proc_sig','parser_baianivis.py',512),
  ('comandos_funcao -> comandos_funcao comando_local','comandos_funcao',2,'p_comandos_funcao','parser_baianivis.py',526),
  ('comandos_funcao -> empty','comandos_funcao',1,'p_comandos_funcao','parser_baianivis.py',527),
  ('comando_local -> declaracao_variavel','comando_local',1,'p_comando_local','parser_baianivis.py',535),
  ('comando_local -> comando','comando_local',1,'p_comando_local','parser_baianivis.py',536),
  ('lista_parametros -> parametros','lista_parametros',1,'p_lista_parametros','parser_baianivis.py',540),
  ('lista_parametros -> empty','lista_parametros',1,'p_lista_parametros','parser_baianivis.py',541),
  ('parametros -> parametro','parametros',1,'p_parametros','parser_baianivis.py',545),
  ('parametros -> parametros VIRGULA parametro','parametros',3,'p_parametros','parser_baianivis.py',546),
  ('parametro -> tipo ID','parametro',2,'p_parametro','parser_baianivis.py',557),
  ('comando_retorno -> RETORNO expressao PONTO_VIRGULA','comando_retorno',3,'p_comando_retorno','parser_baianivis.py',561),
  ('comando_retorno -> RETORNO PONTO_VIRGULA','comando_retorno',2,'p_comando_retorno','parser_baianivis.py',562),
  ('empty -> <empty>','empty',0,'p_empty','parser_baianivis.py',604),
]
